/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-10-27 at 00:30:32 UTC 
 * Modify at your own risk.
 */

package com.appspot.connexus_1078.connexusAPI;

/**
 * Service definition for ConnexusAPI (v1.0).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ConnexusAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ConnexusAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the connexusAPI library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://connexus-1078.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "connexusAPI/v1.0/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ConnexusAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ConnexusAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getAllStreams".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetAllStreams#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllStreams getAllStreams() throws java.io.IOException {
    GetAllStreams result = new GetAllStreams();
    initialize(result);
    return result;
  }

  public class GetAllStreams extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams> {

    private static final String REST_PATH = "getAllStreams";

    /**
     * Create a request for the method "getAllStreams".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetAllStreams#execute()} method to invoke the remote
     * operation. <p> {@link GetAllStreams#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllStreams() {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAllStreams setAlt(java.lang.String alt) {
      return (GetAllStreams) super.setAlt(alt);
    }

    @Override
    public GetAllStreams setFields(java.lang.String fields) {
      return (GetAllStreams) super.setFields(fields);
    }

    @Override
    public GetAllStreams setKey(java.lang.String key) {
      return (GetAllStreams) super.setKey(key);
    }

    @Override
    public GetAllStreams setOauthToken(java.lang.String oauthToken) {
      return (GetAllStreams) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllStreams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllStreams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllStreams setQuotaUser(java.lang.String quotaUser) {
      return (GetAllStreams) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllStreams setUserIp(java.lang.String userIp) {
      return (GetAllStreams) super.setUserIp(userIp);
    }

    @Override
    public GetAllStreams set(String parameterName, Object value) {
      return (GetAllStreams) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getImages".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetImages#execute()} method to invoke the remote operation.
   *
   * @param streamId
   * @return the request
   */
  public GetImages getImages(java.lang.Long streamId) throws java.io.IOException {
    GetImages result = new GetImages(streamId);
    initialize(result);
    return result;
  }

  public class GetImages extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusResponseImages> {

    private static final String REST_PATH = "getImages";

    /**
     * Create a request for the method "getImages".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetImages#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetImages#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param streamId
     * @since 1.13
     */
    protected GetImages(java.lang.Long streamId) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusResponseImages.class);
      this.streamId = com.google.api.client.util.Preconditions.checkNotNull(streamId, "Required parameter streamId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetImages setAlt(java.lang.String alt) {
      return (GetImages) super.setAlt(alt);
    }

    @Override
    public GetImages setFields(java.lang.String fields) {
      return (GetImages) super.setFields(fields);
    }

    @Override
    public GetImages setKey(java.lang.String key) {
      return (GetImages) super.setKey(key);
    }

    @Override
    public GetImages setOauthToken(java.lang.String oauthToken) {
      return (GetImages) super.setOauthToken(oauthToken);
    }

    @Override
    public GetImages setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetImages) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetImages setQuotaUser(java.lang.String quotaUser) {
      return (GetImages) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetImages setUserIp(java.lang.String userIp) {
      return (GetImages) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("stream_id")
    private java.lang.Long streamId;

    /**

     */
    public java.lang.Long getStreamId() {
      return streamId;
    }

    public GetImages setStreamId(java.lang.Long streamId) {
      this.streamId = streamId;
      return this;
    }

    @Override
    public GetImages set(String parameterName, Object value) {
      return (GetImages) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNearbyImages".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetNearbyImages#execute()} method to invoke the remote operation.
   *
   * @param latitude
   * @param longitude
   * @return the request
   */
  public GetNearbyImages getNearbyImages(java.lang.Double latitude, java.lang.Double longitude) throws java.io.IOException {
    GetNearbyImages result = new GetNearbyImages(latitude, longitude);
    initialize(result);
    return result;
  }

  public class GetNearbyImages extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusResponseImages> {

    private static final String REST_PATH = "getNearbyImages";

    /**
     * Create a request for the method "getNearbyImages".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetNearbyImages#execute()} method to invoke the remote
     * operation. <p> {@link GetNearbyImages#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param latitude
     * @param longitude
     * @since 1.13
     */
    protected GetNearbyImages(java.lang.Double latitude, java.lang.Double longitude) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusResponseImages.class);
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNearbyImages setAlt(java.lang.String alt) {
      return (GetNearbyImages) super.setAlt(alt);
    }

    @Override
    public GetNearbyImages setFields(java.lang.String fields) {
      return (GetNearbyImages) super.setFields(fields);
    }

    @Override
    public GetNearbyImages setKey(java.lang.String key) {
      return (GetNearbyImages) super.setKey(key);
    }

    @Override
    public GetNearbyImages setOauthToken(java.lang.String oauthToken) {
      return (GetNearbyImages) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNearbyImages setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNearbyImages) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNearbyImages setQuotaUser(java.lang.String quotaUser) {
      return (GetNearbyImages) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNearbyImages setUserIp(java.lang.String userIp) {
      return (GetNearbyImages) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public GetNearbyImages setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public GetNearbyImages setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @Override
    public GetNearbyImages set(String parameterName, Object value) {
      return (GetNearbyImages) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOwnedStreams".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetOwnedStreams#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetOwnedStreams getOwnedStreams() throws java.io.IOException {
    GetOwnedStreams result = new GetOwnedStreams();
    initialize(result);
    return result;
  }

  public class GetOwnedStreams extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams> {

    private static final String REST_PATH = "getOwnedStreams";

    /**
     * Create a request for the method "getOwnedStreams".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetOwnedStreams#execute()} method to invoke the remote
     * operation. <p> {@link GetOwnedStreams#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetOwnedStreams() {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOwnedStreams setAlt(java.lang.String alt) {
      return (GetOwnedStreams) super.setAlt(alt);
    }

    @Override
    public GetOwnedStreams setFields(java.lang.String fields) {
      return (GetOwnedStreams) super.setFields(fields);
    }

    @Override
    public GetOwnedStreams setKey(java.lang.String key) {
      return (GetOwnedStreams) super.setKey(key);
    }

    @Override
    public GetOwnedStreams setOauthToken(java.lang.String oauthToken) {
      return (GetOwnedStreams) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOwnedStreams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOwnedStreams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOwnedStreams setQuotaUser(java.lang.String quotaUser) {
      return (GetOwnedStreams) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOwnedStreams setUserIp(java.lang.String userIp) {
      return (GetOwnedStreams) super.setUserIp(userIp);
    }

    @Override
    public GetOwnedStreams set(String parameterName, Object value) {
      return (GetOwnedStreams) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSearchSuggestion".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetSearchSuggestion#execute()} method to invoke the remote operation.
   *
   * @param keyWord
   * @return the request
   */
  public GetSearchSuggestion getSearchSuggestion(java.lang.String keyWord) throws java.io.IOException {
    GetSearchSuggestion result = new GetSearchSuggestion(keyWord);
    initialize(result);
    return result;
  }

  public class GetSearchSuggestion extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondSearchSuggestions> {

    private static final String REST_PATH = "getSearchSuggestion";

    /**
     * Create a request for the method "getSearchSuggestion".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetSearchSuggestion#execute()} method to invoke the remote
     * operation. <p> {@link GetSearchSuggestion#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param keyWord
     * @since 1.13
     */
    protected GetSearchSuggestion(java.lang.String keyWord) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondSearchSuggestions.class);
      this.keyWord = com.google.api.client.util.Preconditions.checkNotNull(keyWord, "Required parameter keyWord must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSearchSuggestion setAlt(java.lang.String alt) {
      return (GetSearchSuggestion) super.setAlt(alt);
    }

    @Override
    public GetSearchSuggestion setFields(java.lang.String fields) {
      return (GetSearchSuggestion) super.setFields(fields);
    }

    @Override
    public GetSearchSuggestion setKey(java.lang.String key) {
      return (GetSearchSuggestion) super.setKey(key);
    }

    @Override
    public GetSearchSuggestion setOauthToken(java.lang.String oauthToken) {
      return (GetSearchSuggestion) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSearchSuggestion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSearchSuggestion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSearchSuggestion setQuotaUser(java.lang.String quotaUser) {
      return (GetSearchSuggestion) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSearchSuggestion setUserIp(java.lang.String userIp) {
      return (GetSearchSuggestion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("key_word")
    private java.lang.String keyWord;

    /**

     */
    public java.lang.String getKeyWord() {
      return keyWord;
    }

    public GetSearchSuggestion setKeyWord(java.lang.String keyWord) {
      this.keyWord = keyWord;
      return this;
    }

    @Override
    public GetSearchSuggestion set(String parameterName, Object value) {
      return (GetSearchSuggestion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStream".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetStream#execute()} method to invoke the remote operation.
   *
   * @param streamId
   * @return the request
   */
  public GetStream getStream(java.lang.Long streamId) throws java.io.IOException {
    GetStream result = new GetStream(streamId);
    initialize(result);
    return result;
  }

  public class GetStream extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStream> {

    private static final String REST_PATH = "getStream";

    /**
     * Create a request for the method "getStream".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetStream#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetStream#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param streamId
     * @since 1.13
     */
    protected GetStream(java.lang.Long streamId) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStream.class);
      this.streamId = com.google.api.client.util.Preconditions.checkNotNull(streamId, "Required parameter streamId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStream setAlt(java.lang.String alt) {
      return (GetStream) super.setAlt(alt);
    }

    @Override
    public GetStream setFields(java.lang.String fields) {
      return (GetStream) super.setFields(fields);
    }

    @Override
    public GetStream setKey(java.lang.String key) {
      return (GetStream) super.setKey(key);
    }

    @Override
    public GetStream setOauthToken(java.lang.String oauthToken) {
      return (GetStream) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStream setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStream) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStream setQuotaUser(java.lang.String quotaUser) {
      return (GetStream) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStream setUserIp(java.lang.String userIp) {
      return (GetStream) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("stream_id")
    private java.lang.Long streamId;

    /**

     */
    public java.lang.Long getStreamId() {
      return streamId;
    }

    public GetStream setStreamId(java.lang.Long streamId) {
      this.streamId = streamId;
      return this;
    }

    @Override
    public GetStream set(String parameterName, Object value) {
      return (GetStream) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSubscribedStreams".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetSubscribedStreams#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetSubscribedStreams getSubscribedStreams() throws java.io.IOException {
    GetSubscribedStreams result = new GetSubscribedStreams();
    initialize(result);
    return result;
  }

  public class GetSubscribedStreams extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams> {

    private static final String REST_PATH = "getSubscribedStreams";

    /**
     * Create a request for the method "getSubscribedStreams".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetSubscribedStreams#execute()} method to invoke the
     * remote operation. <p> {@link GetSubscribedStreams#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetSubscribedStreams() {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSubscribedStreams setAlt(java.lang.String alt) {
      return (GetSubscribedStreams) super.setAlt(alt);
    }

    @Override
    public GetSubscribedStreams setFields(java.lang.String fields) {
      return (GetSubscribedStreams) super.setFields(fields);
    }

    @Override
    public GetSubscribedStreams setKey(java.lang.String key) {
      return (GetSubscribedStreams) super.setKey(key);
    }

    @Override
    public GetSubscribedStreams setOauthToken(java.lang.String oauthToken) {
      return (GetSubscribedStreams) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSubscribedStreams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSubscribedStreams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSubscribedStreams setQuotaUser(java.lang.String quotaUser) {
      return (GetSubscribedStreams) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSubscribedStreams setUserIp(java.lang.String userIp) {
      return (GetSubscribedStreams) super.setUserIp(userIp);
    }

    @Override
    public GetSubscribedStreams set(String parameterName, Object value) {
      return (GetSubscribedStreams) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUploadURL".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link GetUploadURL#execute()} method to invoke the remote operation.
   *
   * @param streamId
   * @return the request
   */
  public GetUploadURL getUploadURL(java.lang.Long streamId) throws java.io.IOException {
    GetUploadURL result = new GetUploadURL(streamId);
    initialize(result);
    return result;
  }

  public class GetUploadURL extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusStringResponse> {

    private static final String REST_PATH = "getUploadURL";

    /**
     * Create a request for the method "getUploadURL".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link GetUploadURL#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUploadURL#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param streamId
     * @since 1.13
     */
    protected GetUploadURL(java.lang.Long streamId) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusStringResponse.class);
      this.streamId = com.google.api.client.util.Preconditions.checkNotNull(streamId, "Required parameter streamId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUploadURL setAlt(java.lang.String alt) {
      return (GetUploadURL) super.setAlt(alt);
    }

    @Override
    public GetUploadURL setFields(java.lang.String fields) {
      return (GetUploadURL) super.setFields(fields);
    }

    @Override
    public GetUploadURL setKey(java.lang.String key) {
      return (GetUploadURL) super.setKey(key);
    }

    @Override
    public GetUploadURL setOauthToken(java.lang.String oauthToken) {
      return (GetUploadURL) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUploadURL setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUploadURL) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUploadURL setQuotaUser(java.lang.String quotaUser) {
      return (GetUploadURL) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUploadURL setUserIp(java.lang.String userIp) {
      return (GetUploadURL) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("stream_id")
    private java.lang.Long streamId;

    /**

     */
    public java.lang.Long getStreamId() {
      return streamId;
    }

    public GetUploadURL setStreamId(java.lang.Long streamId) {
      this.streamId = streamId;
      return this;
    }

    @Override
    public GetUploadURL set(String parameterName, Object value) {
      return (GetUploadURL) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "searchStreams".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link SearchStreams#execute()} method to invoke the remote operation.
   *
   * @param keyWord
   * @return the request
   */
  public SearchStreams searchStreams(java.lang.String keyWord) throws java.io.IOException {
    SearchStreams result = new SearchStreams(keyWord);
    initialize(result);
    return result;
  }

  public class SearchStreams extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams> {

    private static final String REST_PATH = "searchStreams";

    /**
     * Create a request for the method "searchStreams".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link SearchStreams#execute()} method to invoke the remote
     * operation. <p> {@link SearchStreams#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param keyWord
     * @since 1.13
     */
    protected SearchStreams(java.lang.String keyWord) {
      super(ConnexusAPI.this, "GET", REST_PATH, null, com.appspot.connexus_1078.connexusAPI.model.ConnexusRespondStreams.class);
      this.keyWord = com.google.api.client.util.Preconditions.checkNotNull(keyWord, "Required parameter keyWord must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public SearchStreams setAlt(java.lang.String alt) {
      return (SearchStreams) super.setAlt(alt);
    }

    @Override
    public SearchStreams setFields(java.lang.String fields) {
      return (SearchStreams) super.setFields(fields);
    }

    @Override
    public SearchStreams setKey(java.lang.String key) {
      return (SearchStreams) super.setKey(key);
    }

    @Override
    public SearchStreams setOauthToken(java.lang.String oauthToken) {
      return (SearchStreams) super.setOauthToken(oauthToken);
    }

    @Override
    public SearchStreams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SearchStreams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SearchStreams setQuotaUser(java.lang.String quotaUser) {
      return (SearchStreams) super.setQuotaUser(quotaUser);
    }

    @Override
    public SearchStreams setUserIp(java.lang.String userIp) {
      return (SearchStreams) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("key_word")
    private java.lang.String keyWord;

    /**

     */
    public java.lang.String getKeyWord() {
      return keyWord;
    }

    public SearchStreams setKeyWord(java.lang.String keyWord) {
      this.keyWord = keyWord;
      return this;
    }

    @Override
    public SearchStreams set(String parameterName, Object value) {
      return (SearchStreams) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "subscribe".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest}
   * @return the request
   */
  public Subscribe subscribe(com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest content) throws java.io.IOException {
    Subscribe result = new Subscribe(content);
    initialize(result);
    return result;
  }

  public class Subscribe extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusBooleanResponse> {

    private static final String REST_PATH = "subscribe";

    /**
     * Create a request for the method "subscribe".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link Subscribe#execute()} method to invoke the remote
     * operation. <p> {@link
     * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest}
     * @since 1.13
     */
    protected Subscribe(com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest content) {
      super(ConnexusAPI.this, "POST", REST_PATH, content, com.appspot.connexus_1078.connexusAPI.model.ConnexusBooleanResponse.class);
    }

    @Override
    public Subscribe setAlt(java.lang.String alt) {
      return (Subscribe) super.setAlt(alt);
    }

    @Override
    public Subscribe setFields(java.lang.String fields) {
      return (Subscribe) super.setFields(fields);
    }

    @Override
    public Subscribe setKey(java.lang.String key) {
      return (Subscribe) super.setKey(key);
    }

    @Override
    public Subscribe setOauthToken(java.lang.String oauthToken) {
      return (Subscribe) super.setOauthToken(oauthToken);
    }

    @Override
    public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Subscribe) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Subscribe setQuotaUser(java.lang.String quotaUser) {
      return (Subscribe) super.setQuotaUser(quotaUser);
    }

    @Override
    public Subscribe setUserIp(java.lang.String userIp) {
      return (Subscribe) super.setUserIp(userIp);
    }

    @Override
    public Subscribe set(String parameterName, Object value) {
      return (Subscribe) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unsubscribe".
   *
   * This request holds the parameters needed by the connexusAPI server.  After setting any optional
   * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest}
   * @return the request
   */
  public Unsubscribe unsubscribe(com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest content) throws java.io.IOException {
    Unsubscribe result = new Unsubscribe(content);
    initialize(result);
    return result;
  }

  public class Unsubscribe extends ConnexusAPIRequest<com.appspot.connexus_1078.connexusAPI.model.ConnexusBooleanResponse> {

    private static final String REST_PATH = "unsubscribe";

    /**
     * Create a request for the method "unsubscribe".
     *
     * This request holds the parameters needed by the the connexusAPI server.  After setting any
     * optional parameters, call the {@link Unsubscribe#execute()} method to invoke the remote
     * operation. <p> {@link
     * Unsubscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest}
     * @since 1.13
     */
    protected Unsubscribe(com.appspot.connexus_1078.connexusAPI.model.ConnexusStreamRequest content) {
      super(ConnexusAPI.this, "POST", REST_PATH, content, com.appspot.connexus_1078.connexusAPI.model.ConnexusBooleanResponse.class);
    }

    @Override
    public Unsubscribe setAlt(java.lang.String alt) {
      return (Unsubscribe) super.setAlt(alt);
    }

    @Override
    public Unsubscribe setFields(java.lang.String fields) {
      return (Unsubscribe) super.setFields(fields);
    }

    @Override
    public Unsubscribe setKey(java.lang.String key) {
      return (Unsubscribe) super.setKey(key);
    }

    @Override
    public Unsubscribe setOauthToken(java.lang.String oauthToken) {
      return (Unsubscribe) super.setOauthToken(oauthToken);
    }

    @Override
    public Unsubscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Unsubscribe) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Unsubscribe setQuotaUser(java.lang.String quotaUser) {
      return (Unsubscribe) super.setQuotaUser(quotaUser);
    }

    @Override
    public Unsubscribe setUserIp(java.lang.String userIp) {
      return (Unsubscribe) super.setUserIp(userIp);
    }

    @Override
    public Unsubscribe set(String parameterName, Object value) {
      return (Unsubscribe) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ConnexusAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ConnexusAPI}. */
    @Override
    public ConnexusAPI build() {
      return new ConnexusAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ConnexusAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setConnexusAPIRequestInitializer(
        ConnexusAPIRequestInitializer connexusapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(connexusapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
